          0: 00000000fefa58f8 ==> boot_prefixes => / /boot/
          1: 00000000fefa5920 ==> scan_dev_for_boot => echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prtlinux/extlinux.conf
          6: 00000000fefa6528 ==> fdtcontroladdr => fef42be0
          7: 00000000fefa6578 ==> kernel_comp_size => 0x4000000
          8: 00000000fefa6640 ==> board_name => qemu-riscv
          9: 00000000fefa6668 ==> pxefile_addr_r => 0x8c200000
         10: 00000000fefa6780 ==> bootcmd_scsi0 => devnum=0; run scsi_boot
         11: 00000000fefa6988 ==> boot_n16: 00000000fefa7090 ==> baudrate   => 115200
         17: 00000000fefa7450 ==> netmask    => 255.255.255.0
         18: 00000000fefa74c8 ==> serverip   => 10.0.0.1
         19: 00000000fefa7568 ==> virtio_init => if ${virtio_need_init}; then virtio_need_init=false; virtio scan; fi
         20: 00000000fefa76d0 ==> usb_boot   => usb start; if usb dev ${devnum}; then dero_bootcmd
         25: 00000000fefa79a0 ==> kernel_addr_r => 0x84000000
         26: 00000000fefa7d60 ==> filesize   => a5
         27: 00000000fefa7f18 ==> stderr     => serial,vidconsole
         28: 00000000fefa8030 ==> board      => qemu-riscv
         29: 00000000fefa80d0 ==> bootfile   => boot.scr.uimg
         30: 00000000fefa8148 ==> distro_bootcmd => scsi_need_init=; sett_part; fi
         34: 00000000fefa86e8 ==> boot_efi_binary => load ${devtype} ${devnum}:${distro_bootpart} ${kernel_addr_r} efi/boot/bootriscv64.efi; if fdt addr -q ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};else bootefi ${kernel_addr_r} ${fdtcontroladdr};fi
         35: 00000000fefa8800 ==> scsi_init  => if ${scsi_need_init}; then scsi_neut     => serial,vidconsole
         41: 00000000fefa91d8 ==> vendor     => emulation
         42: 00000000fefa9250 ==> efi_dtb_prefixes => / /dtb/ /dtb/current/
         43: 00000000fefa93e0 ==> ramdisk_addr_r => 0x8c300000
         44: 00000000fefa9480 ==> boot_targets => virtio0 scsi0 dhcp 
         45: 00000000fefa9660 ==> scriptaddr => 0x8c100000
         46: 00000000fefa9688 48: 00000000fefa9a70 ==> kernel_comp_addr_r => 0x88000000
         49: 00000000fefa9db8 ==> initrd_high => 0xffffffffffffffff
         50: 00000000fefaa128 ==> scan_dev_for_scripts => for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; pe} ${devnum}:${distro_bootpart} ${fdt_addr_r} ${prefix}${efi_fdtfile}
         53: 00000000fefaa498 ==> fdt_high   => 0xffffffffffffffff
         54: 00000000fefaa4e8 ==> scan_dev_for_efi => setenv efi_fdtfile ${fdtfile}; for prefix in ${efi_dtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb;8 ==> scan_dev_for_boot_part => part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then part uuid ${devtype} ${     59: 00000000fefaa8a8 ==> boot_efi_bootmgr => if fdt addr -q ${fdt_addr_r}; then bootefi booq ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r};else bootefi ${kernel_addr_r} ${fdtcontroladdr};fi
boot_efi_bootmgr=if fdt addr -q ${fdt_addr_r}; then bootefi bootmgr ${fdt_addr_r};else bootefi bootmgr;fi
boot_extlinux=sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}${boot_syslinux_conf}
boot_net_usb_stscriptaddr}; fi;setenv efi_fdtfile ${fdtfile}; setenv efi_old_vci ${bootp_vci};setenv efi_old_arch ${bootp_arch};setenv bootp_vci PXEClient:Arch:00027:UNDI:003000;setenv bootp_arch 0x1b;if dhcp ${kernel_addr_r}; then tftpboot ${fdt_addr_r} dtb/${efi_fdtfile};if fdt addr -q ${fdt_addr_r}; then bootefi ${kernel_addr_r} ${fdt_addr_r}; else bootefi tio_need_init=; for target in ${boot_targets}; do run bootcmd_${target}; done
efi_dtb_prefixes=/ /dtb/ /dtb/current/
ethact=eth@10014000
ethaddr=02:00:11:22:33:49
fdt_addr_r=0x8c000000
fdt_high=0xffffffffffffffff
fdtcontroladdr=fef42be0
fileaddr=84000000
filesize=a5
gatewayip=10.0.0.1
initrd_high=0xffffffffffffffff
ipaddr=10.0.0.10
kernel_addr_r=0xnv nvme_need_init false; nvme scan; fi
pxefile_addr_r=0x8c200000
ramdisk_addr_r=0x8c300000
ccan_dev_for_boot=echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;run scan_dev_for_efi;
scan_dev_for_boot_part=part list ${devtype} ${devnum} -bootabtb_prefixes}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${efi_fdtfile}; then run load_efi_dtb; fi;done;run boot_efi_bootmgr;if test -e ${devtype} ${devnum}:${distro_bootpart} efi/boot/bootriscv64.efi; then echo Found EFI removable media binary efi/boot/bootriscv64.efi; run boot_efi_binary; echo EFI LOAD FAILED: continuing...; fi; setenv efript}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done
scriptaddr=0x8c100000
scsi_boot=run boot_pci_enum; run scsi_init; if scsi dev ${devnum}; then devtype=scsi; run scan_dev_for_boot_part; fi
scsi_init=if ${scsi_need_init}; then scsi_need_init=false; scsi scan; fi
serverip=10t=false; virtio scan; fi

